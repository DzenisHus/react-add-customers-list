{"version":3,"sources":["components/description.js","components/input-label.js","constants/users.js","components/form.js","components/result-list.js","App.js","reportWebVitals.js","index.js"],"names":["Description","props","_jsxs","className","children","_jsx","InputLabel","htmlFor","name","label","_objectSpread","type","id","register","required","errors","defaultValue","role","UserContext","createContext","Form","setUsers","useContext","UsersContext","_useForm","useForm","handleSubmit","reset","formState","onSubmit","newUser","randomKey","Math","random","toString","substring","prevUsers","_defineProperty","requiredText","max","min","ResultList","users","maxValue","apply","_toConsumableArray","Object","values","map","user","yearsOfExperience","keys","length","key","index","BiUserCircle","firstName","lastName","App","_useState","useState","_useState2","_slicedToArray","Provider","value","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.e65d543d.chunk.js","sourcesContent":["export function Description(props) {\n    return (\n        // return description for project\n        <div className=\"prose lg:prose-base mb-10\">\n            <h1 className=\"title\">Project Title</h1>\n            <p className=\"description\">Lorem Ipsum is simply dummy text of the printing and typesetting industry...</p>\n        </div>\n    )\n}\n\nexport default Description;","export function InputLabel(props) {\n    return (\n        // return input with label and error message\n        <label className=\"block text-left mb-4\" htmlFor={props.name}>\n            <span className=\"text-gray-700\">{props.label}</span>\n            <input type={props.type} \n                id={props.name}\n                className=\"mb-1 block w-full rounded-md px-3 py-2 bg-gray-100 border-transparent focus:border-gray-500 focus:bg-white focus:ring-0\"\n                {...props.register(props.name, props.required)}\n                aria-invalid={props.errors[props.name] ? \"true\" : \"false\"}\n                defaultValue={props.defaultValue}\n            />\n\n            {props.errors[props.name] && props.errors[props.name].type === \"required\" && (\n                <span className=\"text-red-500\" role=\"alert\">This is required</span>\n            )}\n            {props.errors[props.name] && props.errors[props.name].type === \"min\" && (\n                <span className=\"text-red-500\" role=\"alert\">Min length exceeded</span>\n            )}\n            {props.errors[props.name] && props.errors[props.name].type === \"max\" && (\n                <span className=\"text-red-500\"role=\"alert\">Max length exceeded</span>\n            )}\n\n        </label>\n    )\n}\n\nexport default InputLabel;","import { createContext } from 'react';\n\nconst UserContext = createContext();\n\nexport default UserContext;","import React from 'react';\nimport './../App.css';\nimport { useContext } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { InputLabel } from './input-label.js';\nimport UsersContext from './../constants/users.js';\n\nfunction Form() {\n  const {setUsers} = useContext(UsersContext);\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n\n  const onSubmit = (newUser) => {\n    const randomKey = Math.random().toString(36).substring(7);\n    setUsers(prevUsers => ({\n      ...prevUsers,\n      [randomKey]: newUser\n    }));\n\n    reset();\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n        <InputLabel type=\"text\" \n            label=\"First Name\" \n            name=\"firstName\" \n            register={register} errors={errors} \n            required={{required: true}} \n            requiredText=\"This field is required\" \n        />\n        <InputLabel type=\"text\"\n            label=\"Last Name\"\n            name=\"lastName\"\n            register={register}\n            errors={errors}\n            required={{required: true}}\n            requiredText=\"This field is required\" \n            defaultValue=\"\"\n        />\n        <InputLabel \n            type=\"number\" \n            label=\"Years of Experience\" \n            name=\"yearsOfExperience\" \n            register={register} \n            errors={errors} \n            required={{required: true, max: 99, min: 2}} \n            requiredText=\"This field is required\" \n        />\n\n        <button type=\"submit\" className='px-10 text-xl my-5 py-3 font-semibold text-sm bg-cyan-500 text-white rounded-full shadow-sm hover:bg-cyan-700 ease-in duration-200'>Submit</button>\n    </form>\n    );\n}\n\nexport default Form;\n\n","import React, { useContext } from 'react';\nimport UsersContext from './../constants/users.js';\nimport {BiUserCircle} from 'react-icons/bi';\n\nexport function ResultList(props) {\n    const { users } = useContext(UsersContext);\n\n    const maxValue = Math.max(...Object.values(users).map(user => user.yearsOfExperience)).toString();\n\n    return (\n        <div className=\"flex flex-col\">\n            <h3 className=\"text-3xl font-bold text-gray-800 mb-5 text-center\">Users List</h3>\n\n            {users && Object.keys(users).length > 1 && (\n                <p className='text-center mb-4'>Below is a list of our users. The user with the most experience is marked in red.</p>\n            )}\n\n            {users && Object.keys(users).length > 0 ? (\n                <ol className=\"list-decimal text-left\">\n                    {Object.keys(users).map((key, index) => (\n                        <li key={index} \n                            className={Object.keys(users).length > 1 && users[key].yearsOfExperience === maxValue ? 'text-red-600' : ''}>\n                            <BiUserCircle className=\"inline-block mb-1 mr-1\" />\n                            {users[key].firstName} {users[key].lastName} <strong>{users[key].yearsOfExperience}</strong>\n                        </li>\n                    ))}\n                </ol>\n            ) : (\n                <p className='text-center'>No users found.</p>\n            )}\n        </div>\n    )\n}\n\nexport default ResultList;","import './App.css';\nimport { useState } from 'react';\nimport Description from './components/description';\nimport Form from './components/form.js';\nimport ResultList from './components/result-list';\nimport UsersContext from './constants/users.js';\n\nfunction App() {\n  const [users, setUsers] = useState({});\n\n  return (\n    <div className=\"App\">\n      <div className='relative flex min-h-screen items-center justify-center overflow-hidden py-6 sm:py-12'>\n        <div className='p-10 ring-1 ring-gray-200 rounded-md bg-white shadow-2xl max-w-[90%]'>\n          <Description />\n          <UsersContext.Provider value={{users, setUsers}}>\n              <Form />\n              <ResultList />\n          </UsersContext.Provider>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}